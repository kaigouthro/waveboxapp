!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["trello-background"]=t():e["trello-background"]=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function r(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,r),s.l=!0,s.exports}return r.m=e,r.c=t,r.d=function(e,t,i){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)r.d(i,s,function(t){return e[t]}.bind(null,s));return i},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);const i=Symbol("privApi"),s=Symbol("privServiceId"),o=Symbol("privIsDestroyed"),n=Symbol("privOpenTimeouts"),a=Symbol("privOpenIntervals");var c=class{constructor(e,t){this[i]=e,this[s]=t,this[o]=!1,this[n]=new Set,this[a]=new Set}destroy(){this[o]||(Array.from(this[n]).forEach(e=>{clearTimeout(e)}),this[n].clear(),Array.from(this[a]).forEach(e=>{clearInterval(e)}),this[a].clear(),this[o]=!0)}isDestroyed(){return this[o]}throwOnDestroyed(){if(this[o])throw new Error("CoreBackground has been destroyed")}get STORE_DATA_TYPES(){return this[i].STORE_DATA_TYPES}get appVersion(){return this[i].appVersion}get api(){return this[i]}setTimeout(e,t){this.throwOnDestroyed();const r=setTimeout(()=>{this[n].delete(r),e()},t);return this[n].add(r),r}clearTimeout(e){clearTimeout(e),this[n].delete(e)}setInterval(e,t){this.throwOnDestroyed();const r=setInterval(e,t);return this[a].add(r),r}clearInterval(e){clearInterval(e),this[a].delete(e)}};var d=class{static fetchUserProfile(e){const t=e.libs.querystring.stringify({fields:"email,fullName,initials,username,avatarSource,avatarHash"});return Promise.resolve().then(()=>e.fetch(`https://trello.com/1/Members/me?${t}`,{credentials:"include"})).then(e=>e.ok?Promise.resolve(e):Promise.reject(e)).then(e=>e.json())}static fetchUserBoards(e){const t=e.libs.querystring.stringify({filter:"open",fields:"id,name"});return Promise.resolve().then(()=>e.fetch(`https://trello.com/1/Members/me/boards/?${t}`,{credentials:"include"})).then(e=>e.ok?Promise.resolve(e):Promise.reject(e)).then(e=>e.json())}static fetchUnreadNotifications(e){const t=e.libs.querystring.stringify({read_filter:"unread",limit:1e3});return Promise.resolve().then(()=>e.fetch(`https://trello.com/1/members/me/notifications/?${t}`,{credentials:"include"})).then(e=>e.ok?Promise.resolve(e):Promise.reject(e)).then(e=>e.json())}};function h(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}const l=6e5,u=3e4,m=2e4;var f=class extends c{constructor(...e){super(...e),h(this,"handleForegroundMessage",(e,t,...r)=>{switch(t){case"connect-page":this.handleForegroundPageConnect();break;case"has-notifications-changed":this.handleForegroundNotificationsChanged(...r)}}),h(this,"handleUserRequestsSync",e=>{Promise.resolve().then(()=>this.syncNotifications()).catch(()=>Promise.resolve()).then(()=>this.syncProfile()).catch(()=>{})}),h(this,"handleMachineResume",()=>{Promise.resolve().then(()=>this.syncNotifications()).catch(()=>Promise.resolve()).then(()=>this.syncProfile()).catch(()=>{})}),this.requests={profile:{open:!1,last:0,lastSuccess:0},notifications:{open:!1,last:0,lastSuccess:0}},this.timers={profileSync:(()=>(this.syncProfile().catch(()=>{}),this.setInterval(()=>{this.syncProfile().catch(()=>{})},l)))(),notificationSync:(()=>(this.syncNotifications().catch(()=>{}),this.setInterval(()=>{this.syncNotificationsOnPoll().catch(()=>{})},u)))(),fgChangeThrottle:null},this.api.on("foreground-message",this.handleForegroundMessage),this.api.on("user-requests-sync",this.handleUserRequestsSync),this.api.on("machine-resume",this.handleMachineResume)}destroy(){this.clearInterval(this.timers.profileSync),this.clearInterval(this.timers.notificationSync),this.clearTimeout(this.timers.fgChangeThrottle),this.api.removeListener("foreground-message",this.handleForegroundMessage),this.api.removeListener("user-requests-sync",this.handleUserRequestsSync),this.api.removeListener("machine-resume",this.handleMachineResume),super.destroy()}handleForegroundPageConnect(){const e=new Date;e-this.requests.profile.lastSuccess>l&&this.syncProfile().catch(()=>{}),e-this.requests.notifications.lastSuccess>u&&this.syncNotifications().catch(()=>{})}handleForegroundNotificationsChanged(e,t){this.clearTimeout(this.timers.fgChangeThrottle),this.timers.fgChangeThrottle=this.setTimeout(()=>{this.syncNotifications().catch(()=>{})},2e3)}syncProfile(){return this.isDestroyed()?Promise.reject(new Error("TrelloBackground is destroyed")):this.requests.profile.open?Promise.reject(new Error("Profile sync in progress")):(this.requests.profile.open=!0,Promise.resolve().then(()=>d.fetchUserProfile(this.api)).then(e=>{const t=e.fullName&&e.username&&e.fullName!==e.username?`${e.username} - ${e.fullName}`:e.username,r="upload"===e.avatarSource?`https://trello-avatars.s3.amazonaws.com/${e.avatarHash}/170.png`:void 0;return this.api.setAuthUserId&&this.api.setAuthUserId(e.username),this.api.setServiceAllDisplay(t,r,e.initials),Promise.resolve()}).then(()=>d.fetchUserBoards(this.api)).then(e=>(this.api.updateServiceDataWithChangeset({expando:{trelloBoards:e}}),Promise.resolve())).then(()=>{const e=(new Date).getTime();return this.requests.profile.open=!1,this.requests.profile.last=e,this.requests.profile.lastSuccess=e,Promise.resolve()}).catch(e=>(this.requests.profile.open=!1,this.requests.profile.last=(new Date).getTime(),Promise.reject(e))))}syncNotificationsOnPoll(){return(new Date).getTime()-this.requests.notifications.last<m?Promise.reject(new Error("Throttled request")):this.syncNotifications()}syncNotifications(){return this.isDestroyed()?Promise.reject(new Error("TrelloBackground is destroyed")):this.requests.notifications.open?Promise.reject(new Error("Profile sync in progress")):(this.requests.notifications.open=!0,Promise.resolve().then(()=>d.fetchUnreadNotifications(this.api)).then(e=>{const t=this._trelloNotificationEtag(e);this.api.getServiceData().etag!==t&&this.api.updateServiceDataWithChangeset({etag:t,unreadCount:e.length,trayMessages:this._trelloNotificationsToTrayMessages(e),notifications:this._trelloNotificationsToNotifications(e)})}).then(()=>{const e=(new Date).getTime();return this.requests.notifications.open=!1,this.requests.notifications.last=e,this.requests.notifications.lastSuccess=e,Promise.resolve()}).catch(e=>(this.requests.notifications.open=!1,this.requests.notifications.last=(new Date).getTime(),Promise.reject(e))))}_trelloNotificationEtag(e){return e.slice(0,10).map(e=>e.id).join(",")+","+e.length}_trelloNotificationsToTrayMessages(e){return e.slice(0,10).map(e=>{const t=(e.memberCreator||{}).username||"Someone",r=this._expandTrelloNotificationText(e);return{id:e.id,text:r,extended:{title:`@${t}`,subtitle:r,optAvatarText:t[0]},date:new Date(e.date).getTime(),data:{notificationId:e.id,boardId:e.data.board?e.data.board.id:void 0,cardId:e.data.card?e.data.card.id:void 0,serviceId:this.api.serviceId}}})}_trelloNotificationsToNotifications(e){return e.slice(0,10).map(e=>({id:e.id,title:this._expandTrelloNotificationText(e),body:[{content:e.data.text}],timestamp:new Date(e.date).getTime(),data:{notificationId:e.id,boardId:e.data.board?e.data.board.id:void 0,cardId:e.data.card?e.data.card.id:void 0,serviceId:this.api.serviceId}}))}_expandTrelloNotificationText(e){const t=(e.memberCreator||{}).username||"Someone",r=(e.data.card||{}).name||"Unknown",i=(e.data.board||{}).name||"Unknown",s=(e.data.organization||{}).name||"Unknown";switch(e.type){case"removedFromCard":return`@${t} removed you from the card ${r}`;case"addedToCard":return`@${t} added you to the card ${r}`;case"mentionedOnCard":return`@${t} mentioned you on the card ${r}`;case"commentCard":return`@${t} commented on the card ${r}`;case"changeCard":return`@${t} moved the card ${r}`;case"createdCard":return`@${t} created the card the card ${r}`;case"updateCheckItemStateOnCard":return`@${t} checked the card ${r}`;case"addedMemberToCard":return`@${t} joined the card ${r}`;case"removedMemberFromCard":return`@${t} left the card ${r}`;case"addedAttachmentToCard":return`@${t} added an attachment to the card ${r}`;case"addedToBoard":return`@${t} added you to the board ${i}`;case"removedFromBoard":return`@${t} removed you from the board ${i}`;case"invitedToBoard":return`@${t} invited you to the board ${i}`;case"addAdminToBoard":case"makeAdminOfBoard":return`@${t} made you an admin of the board ${i}`;case"closeBoard":return`@${t} closed the board ${i}`;case"removedFromOrganization":return`@${t} removed you from the organization ${s}`;case"invitedToOrganization":return`@${t} invited you to the organization ${s}`;case"addAdminToOrganization":case"makeAdminOfOrganization":return`@${t} made you an admin of the organization ${s}`;default:return""}}};t.default=f}])});